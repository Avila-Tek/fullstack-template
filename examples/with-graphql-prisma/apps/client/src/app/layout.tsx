import type { Metadata } from 'next';
import localFont from 'next/font/local';
// import '../css/color-variables.css';
import './globals.css';
// import '../css/bg-variables.css';
// import '../css/border-variables.css';
// import '../css/text-variables.css';
// import '../css/fg-variables.css';

import { ApolloWrapper } from '@/lib/graphql/apollo-wrapper';
import { featureFlagProviders } from '@repo/feature-flags/shared';
import {
  type TFeatureFlagConfig,
} from '@repo/feature-flags/web';
import {
  type TAnalyticsOption,
} from '@repo/ui/analytics';
import { ClientProviders } from './client-providers';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // const config: TFeateFlagConfig = {
  //   provider: 'posthog',
  //   token: process.env.NEXT_PUBLIC_POSTHOG_KEY!,
  //   api_host: process.env.NEXT_PUBLIC_POSTHOG_HOST!,
  // };
  const config: TFeatureFlagConfig = {
    provider: featureFlagProviders.growth_book,
    apiHost: process.env.NEXT_PUBLIC_API_HOST,
    clientKey: process.env.NEXT_PUBLIC_CLIENT_KEY,
  };

  const analyticsOptions: Array<TAnalyticsOption> = [
    {
      name: 'google-analytics',
      id: '',
    },
  ];

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <ClientProviders config={config} analyticsOptions={analyticsOptions}>
          {/* <PostHogPageView /> */}
          <ApolloWrapper>{children}</ApolloWrapper>
        </ClientProviders>
      </body>
    </html>
  );
}
